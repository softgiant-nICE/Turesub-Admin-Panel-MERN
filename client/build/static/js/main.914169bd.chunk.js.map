{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","components/partials/Navbar.js","components/partials/Sidebar.js","components/partials/CategoryAddModal.js","actions/categoryActions.js","components/pages/Dashboard.js","components/auth/Login.js","components/layout/NotFound.js","components/private-route/PrivateRoute.js","components/auth/Register.js","reducers/authReducers.js","reducers/categoryReducers.js","reducers/itemReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","components/partials/UserAddModal.js","actions/userActions.js","components/partials/UserUpdateModal.js","components/pages/Users.js","components/partials/CategoryUpdateModal.js","components/pages/Categories.js","components/partials/ItemAddModal.js","actions/itemActions.js","components/partials/ItemUpdateModal.js","components/pages/Items.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","Navbar","onLogoutClick","e","preventDefault","_this","props","user","this","auth","react_default","a","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","onClick","name","index_es","icon","faSignOutAlt","Component","connect","state","Sidebar","react_router_dom","to","CategoryAddModal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","setState","defineProperty","target","value","handleUploadFile","data","FormData","append","files","post","then","response","url","image","onCategoryAdd","newCategory","content","addCategory","history","getData","errors","nextProps","$","modal","undefined","category","message","toast","position","POSITION","TOP_CENTER","data-reset","data-dismiss","noValidate","onSubmit","htmlFor","error","classnames","invalid","autoComplete","accept","src","width","height","form","React","categoryData","callback","res","catch","err","withRouter","Dashboard","currentRecord","records","extraRecord","bind","assertThisInitialized","getExtraData","_this2","_this3","category_array","map","record","concat","faFolderOpen","partials_Navbar","partials_Sidebar","partials_CategoryAddModal","Login","userData","email","password","loginUser","isAuthenticated","push","setItem","jwt_decode","Landing","style","_ref","component","rest","objectWithoutProperties","react_router","assign","render","Register","newUser","password2","registerUser","paddingLeft","borderRadius","letterSpacing","marginTop","isEmpty","require","initialState","loading","item","combineReducers","arguments","length","action","objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","UserAddModal","onUserAdd","addUser","UserUpdateModal","onUserUpdate","_id","updateUser","success","data-reset-input","Users","columns","key","text","align","sortable","cell","react","editRecord","marginRight","deleteRecord","config","page_size","length_menu","filename","no_data_text","button","excel","print","csv","language","filter","info","pagination","first","previous","next","last","show_length_menu","show_filter","show_pagination","show_info","status","pageData","console","log","partials_UserAddModal","partials_UserUpdateModal","faList","faPlus","react_datatable_lib_default","onPageChange","pageChange","react_toastify","CategoryUpdateModal","onCategoryUpdate","updateCategory","Categories","alt","partials_CategoryUpdateModal","ItemAddModal","handleUploadImage","handleUploadSound","sound","onItemAdd","newItem","category_id","addItem","ItemData","ItemUpdateModal","onItemUpdate","updateItem","Items","split","dummy_index","match","params","d_index","partials_ItemAddModal","partials_ItemUpdateModal","addRecord","jwtToken","currentTime","Date","now","exp","window","location","App","es","exact","path","private_route_PrivateRoute","User","Category","Item","NotFound","__webpack_require__","r","__webpack_exports__","global","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_3__","jquery__WEBPACK_IMPORTED_MODULE_4__","jquery__WEBPACK_IMPORTED_MODULE_4___default","jQuery","ReactDOM","document","getElementById","click","toggleClass","on","val"],"mappings":"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","file":"static/js/main.914169bd.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n    GET_ERRORS,\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"./types\";\n\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n        .post(\"/api/user-add\", userData)\n        .then(res => history.push(\"/login\"))\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\nexport const loginUser = userData => dispatch => {\n    axios\n        .post(\"/api/login\", userData)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem(\"jwtToken\", token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    };\n};\n\nexport const setUserLoading = () => {\n    return {\n        type: USER_LOADING\n    };\n};\n\nexport const logoutUser = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\n\nexport const USER_ADD = \"USER_ADD\";\nexport const USER_UPDATE = \"USER_UPDATE\";\n\nexport const SET_CURRENT_CATEGORY = \"SET_CURRENT_CATEGORY\";\nexport const CATEGORY_LOADING = \"CATEGORY_LOADING\";\nexport const CATEGORY_ADD = \"CATEGORY_ADD\";\nexport const CATEGORY_UPDATE = \"CATEGORY_UPDATE\";\n\nexport const SET_CURRENT_ITEM = \"SET_CURRENT_ITEM\";\nexport const ITEM_LOADING = \"ITEM_LOADING\";\nexport const ITEM_ADD = \"ITEM_ADD\";\nexport const ITEM_UPDATE = \"ITEM_UPDATE\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {connect} from \"react-redux\";\nimport {logoutUser} from \"../../actions/authActions\";\n\nclass Navbar extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    render() {\n        const { user } = this.props.auth;\n        return (\n            <div className=\"container-fluid p-0\">\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                    <a className=\"navbar-brand\" href=\"/\">Learning</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                            data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\"\n                            aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n                        <ul className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item dropdown\">\n                                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"settings\"\n                                   data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    Settings\n                                </a>\n                                <div className=\"dropdown-menu\" aria-labelledby=\"settings\">\n                                    <a className=\"dropdown-item\" href=\"#\" onClick={this.onLogoutClick}>Logout</a>\n                                </div>\n                            </li>\n                            <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href=\"#\" onClick={this.onLogoutClick}>Logout ({user.name}) <FontAwesomeIcon icon={faSignOutAlt} /> </a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\nNavbar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Navbar);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {connect} from \"react-redux\";\nimport {logoutUser} from \"../../actions/authActions\";\nimport {Link} from \"react-router-dom\";\n\nclass Sidebar extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    render() {\n        //const { user } = this.props.auth;\n        return (\n            <div className=\"border-right h-100\" id=\"sidebar-wrapper\">\n                <div className=\"list-group list-group-flush\">\n                    <Link to=\"/dashboard\" className=\"list-group-item list-group-item-action\">Dashboard</Link>\n                    <Link to=\"/categories\" className=\"list-group-item list-group-item-action\">Cateogories</Link>\n                    <button className=\"list-group-item list-group-item-action\" onClick={this.onLogoutClick}>Logout <FontAwesomeIcon icon={faSignOutAlt} /></button>\n                </div>\n            </div>\n        );\n    }\n}\n\nSidebar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Sidebar);\n","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addCategory } from \"../../actions/categoryActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from 'axios'\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass CategoryAddModal extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            content: \"\",\r\n            url: \"\",\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n\r\n        $('#add-category-modal').modal('hide');\r\n        if (nextProps.category !== undefined\r\n            && nextProps.category.category !== undefined\r\n            && nextProps.category.category.data !== undefined\r\n            && nextProps.category.category.data.message !== undefined) {\r\n            $('#add-category-modal').modal('hide');\r\n            toast(nextProps.category.category.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    handleUploadFile = (e) => {\r\n    // this.onChange(e)\r\n    const data = new FormData();\r\n    data.append('file', e.target.files[0]);\r\n    // data.append('name', 'some value user types');\r\n    // data.append('description', 'some value user types');\r\n    // '/files' is your nodjs route that triggers our middleware\r\n    axios.post('/api/category-image', data).then((response) => {\r\n      // this.state.url = 'http://localhost:5000/' + response.data.image\r\n      this.setState({ url: response.data.image });\r\n      // console.log(this.state.url); // do something with the response\r\n    })\r\n    }\r\n\r\n    onCategoryAdd = e => {\r\n        e.preventDefault();\r\n        const newCategory = {\r\n            name: this.state.name,\r\n            content: this.state.content,\r\n            url: this.state.url,\r\n        };\r\n        let cb = this.props.addCategory(newCategory, this.props.history, () => {\r\n            this.props.getData()\r\n        });\r\n    };\r\n\r\n    render() { \r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"add-category-modal\" data-reset=\"true\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Add Category</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onCategoryAdd} id=\"add-category\">\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Big text</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.name}\r\n                                                id=\"name\"\r\n                                                type=\"text\"\r\n                                                error={errors.name}\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.name\r\n                                                })}/>\r\n                                            <span className=\"text-danger\">{errors.name}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"content\">Small text</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.content}\r\n                                                error={errors.content}\r\n                                                id=\"content\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.content\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.content}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"url\">Image</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.handleUploadFile}\r\n                                                error={errors.url}\r\n                                                id=\"url\"\r\n                                                type=\"file\"\r\n                                                accept=\"image/*\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.url\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.url}</span>\r\n                                        </div>\r\n                                        <div className=\"col-md-3\">\r\n                                            <img\r\n                                                src={this.state.url}\r\n                                                id=\"img\"\r\n                                                className=\"img-responsive\"\r\n                                                width= '80px'\r\n                                                height='80px'\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"add-category\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Add Category\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCategoryAddModal.propTypes = {\r\n    addCategory: PropTypes.func.isRequired,\r\n    category: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    category: state.category,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addCategory }\r\n)(withRouter(CategoryAddModal));\r\n","import axios from \"axios\";\r\nimport {\r\n    GET_ERRORS,\r\n    CATEGORY_ADD,\r\n    CATEGORY_UPDATE\r\n} from \"./types\";\r\n\r\nexport const addCategory = (categoryData, history, callback) => dispatch => {\r\n    axios\r\n        .post(\"/api/category-add\", categoryData)\r\n        .then(res =>{\r\n                    if (callback) callback(res)\r\n                    dispatch({\r\n                        type: CATEGORY_ADD,\r\n                        payload: res,\r\n                    })\r\n                }).catch(err =>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    );\r\n};\r\n\r\n\r\n// export const updateCategory = (categoryData) => dispatch => {\r\n//     axios\r\n//         .post(\"/api/category-update\", categoryData)\r\n//         .then(res =>\r\n//             dispatch({\r\n//                 type: CATEGORY_UPDATE,\r\n//                 payload: res,\r\n//             })\r\n//         ).catch(err =>\r\n//         dispatch({\r\n//             type: GET_ERRORS,\r\n//             payload: err.response.data\r\n//         })\r\n//     );\r\n// };\r\n\r\nexport const updateCategory = (categoryData, callback) => dispatch => {\r\n    axios\r\n        .post(\"/api/category-update\", categoryData)\r\n        .then(res =>{\r\n                    if (callback) callback(res);\r\n                    dispatch({\r\n                        type: CATEGORY_UPDATE,\r\n                        payload: res,\r\n                    })}\r\n        ).catch(err =>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    );\r\n};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport Navbar from \"../partials/Navbar\";\nimport Sidebar from \"../partials/Sidebar\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\nimport {Link} from \"react-router-dom\";\nimport {faUserAlt} from \"@fortawesome/free-solid-svg-icons/faUserAlt\";\nimport {faFolderOpen} from \"@fortawesome/free-solid-svg-icons/faFolderOpen\";\nimport CategoryAddModal from \"../partials/CategoryAddModal\";\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport axios from 'axios'\n\nclass Dashboard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentRecord: {\n                id:'',\n                name: '',\n                content: '',\n                url: '',\n            },\n            records: [],\n            extraRecord: {\n                id:'',\n                name: '',\n                content: '',\n                url: '',\n            },\n        }\n        this.getData = this.getData.bind(this)\n        this.getExtraData = this.getExtraData.bind(this)\n    }\n\n    componentWillMount() {\n        this.getData()\n        this.getExtraData()\n    }\n    // componentDidUpdate() {\n    //     this.getData()\n    //     this.getExtraData()\n    // }\n    componentWillReceiveProps(nextProps) {\n        this.getData()\n        this.getExtraData()\n    }\n    getData() { \n        axios\n            .post(\"/api/category-data\")\n            .then(res => {\n                this.setState({ records: res.data})\n            })\n            .catch()\n    }\n    getExtraData() { \n        axios\n            .post(\"/api/extra-data\")\n            .then(res => {\n                this.setState({ extraRecord: res.data})\n            })\n            .catch()\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    render() { \n        let category_array = null;\n        if (this.state.records) {\n            category_array = this.state.records.map( function(record) {\n                return (\n                    <div className=\"col-sm-3 p-sm-2\">\n                        <div className=\"card bg-secondary text-white shadow-lg\">\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">{record.name}</h5>\n                                <p className=\"card-text\">{record.content}</p>\n                                <p><img src={record.url} width='60px' height='60px' /></p>\n                                <Link to={`/items/${record.id}`} className=\"btn btn-light\"><FontAwesomeIcon className=\"text-secondary\" icon={faFolderOpen}/> Items</Link>\n                            </div>\n                        </div>\n                    </div>\n                    )\n            })\n        }\n        //const { user } = this.props.auth;\n        return (\n            <div>\n                <Navbar/>\n                <div className=\"d-flex\" id=\"wrapper\">\n                    <Sidebar/>\n                    <CategoryAddModal/>\n                    <div id=\"page-content-wrapper\">\n                        <div className=\"container-fluid\">\n                        <br />\n                            \n                            <h1 className=\"mt-2 text-primary\">Dashboard</h1>\n                            <div className=\"row px-2\">\n                                {category_array}\n                                \n                                <div className=\"col-sm-3 p-sm-2\">\n                                    <div className=\"card bg-dark text-white shadow-lg\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{this.state.extraRecord.name}</h5>\n                                            <p className=\"card-text\">{this.state.extraRecord.content}</p>\n                                            <p><img src={this.state.extraRecord.url} width='60px' height='60px' /></p>\n                                            <Link to={`/items/${this.state.extraRecord.id}`} className=\"btn btn-light\"><FontAwesomeIcon className=\"text-dark\" icon={faFolderOpen}/> Items</Link>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    records: state.records\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { Link, withRouter  } from \"react-router-dom\";\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: {}\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.loginUser(userData);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"container\">\n                <div className=\"row mt-5\">\n                    <div className=\"col-md-4 mx-auto mt-5 card shadow-lg\">\n                        <div className=\"card-body p-1\">\n                            <h2 className=\"text-center text-primary mt-3\">Login</h2>\n                            <form noValidate onSubmit={this.onSubmit} className=\"white\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.email}\n                                    error={errors.email}\n                                    id=\"email\"\n                                    type=\"email\"\n                                    className={classnames(\"form-control\", {\n                                        invalid: errors.email\n                                    })}\n                                />\n                                <span className=\"text-danger\">{errors.email}</span>\n                                <br/>\n                                <label htmlFor=\"password\">Password</label>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                    error={errors.password}\n                                    id=\"password\"\n                                    type=\"password\"\n                                    className={classnames(\"form-control\", {\n                                        invalid: errors.password\n                                    })}\n                                />\n                                <span className=\"text-danger\">{errors.password}</span>\n                                <p className=\"text-center pb-0 mt-2\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"btn btn-large btn-primary mt-2 px-5\">\n                                        Login\n                                    </button>\n                                </p>\n                                <p className=\"text-center pb-0 mt-2\">\n                                    <Link to=\"/register\"></Link>\n                                </p>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n    { loginUser }\n)(Login);\n","import React, { Component } from \"react\";\nclass Landing extends Component {\n    render() {\n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <h1>\n                           Not Found\n                        </h1>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Landing;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            auth.isAuthenticated === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from \"react\";\nimport { Link, withRouter  } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            errors: {}\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2\n        };\n        this.props.registerUser(newUser, this.props.history);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col s8 offset-s2\">\n                        <Link to=\"/\" className=\"btn-flat waves-effect\">\n                            <i className=\"material-icons left\">keyboard_backspace</i> Back to\n                            home\n                        </Link>\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                            <h4>\n                                <b>Register</b> below\n                            </h4>\n                            <p className=\"grey-text text-darken-1\">\n                                Already have an account? <Link to=\"/login\">Log in</Link>\n                            </p>\n                        </div>\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.name}\n                                    id=\"name\"\n                                    type=\"text\"\n                                    error={errors.name}\n                                    className={classnames(\"\", {\n                                        invalid: errors.name\n                                    })}\n                                />\n                                <label htmlFor=\"name\">Name</label>\n                                <span className=\"red-text\">{errors.name}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.email}\n                                    error={errors.email}\n                                    id=\"email\"\n                                    type=\"email\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.email\n                                    })}\n                                />\n                                <label htmlFor=\"email\">Email</label>\n                                <span className=\"red-text\">{errors.email}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                    error={errors.password}\n                                    id=\"password\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.password\n                                    })}\n                                />\n                                <label htmlFor=\"password\">Password</label>\n                                <span className=\"red-text\">{errors.password}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password2}\n                                    id=\"password2\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.password2\n                                    })}\n                                />\n                                <label htmlFor=\"password2\">Confirm Password</label>\n                                <span className=\"red-text\">{errors.password2}</span>\n                            </div>\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                                <button\n                                    style={{\n                                        width: \"150px\",\n                                        borderRadius: \"3px\",\n                                        letterSpacing: \"1.5px\",\n                                        marginTop: \"1rem\"\n                                    }}\n                                    type=\"submit\"\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\n                                    Sign up\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(withRouter(Register));","import {\n    SET_CURRENT_USER,\n    USER_ADD,\n    USER_LOADING,\n    USER_UPDATE\n} from \"../actions/types\";\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false,\n};\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case USER_ADD:\n            return {\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_UPDATE:\n            return {\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload,\n            };\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}\n","import {\r\n    SET_CURRENT_CATEGORY,\r\n    CATEGORY_ADD,\r\n    CATEGORY_LOADING,\r\n    CATEGORY_UPDATE\r\n} from \"../actions/types\";\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    category: {},\r\n    loading: false,\r\n};\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CATEGORY_ADD:\r\n            return {\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                category: action.payload\r\n            };\r\n        case CATEGORY_UPDATE:\r\n            return {\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                category: action.payload,\r\n            };\r\n        case SET_CURRENT_CATEGORY:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                category: action.payload\r\n            };\r\n        case CATEGORY_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    SET_CURRENT_ITEM,\r\n    ITEM_ADD,\r\n    ITEM_LOADING,\r\n    ITEM_UPDATE\r\n} from \"../actions/types\";\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    item: {},\r\n    loading: false,\r\n};\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ITEM_ADD:\r\n            return {\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                item: action.payload\r\n            };\r\n        case ITEM_UPDATE:\r\n            return {\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                item: action.payload,\r\n            };\r\n        case SET_CURRENT_ITEM:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                item: action.payload\r\n            };\r\n        case ITEM_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport categoryReducer from \"./categoryReducers\";\nimport itemReducer from \"./itemReducers\";\nimport errorReducer from \"./errorReducers\";\nexport default combineReducers({\n    auth: authReducer,\n    category: categoryReducer,\n    item: itemReducer,\n    errors: errorReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\nexport default store;\n","import React from 'react'\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addUser } from \"../../actions/userActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport $ from 'jquery';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass UserAddModal extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            errors: {},\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n        if (nextProps.auth !== undefined\n            && nextProps.auth.user !== undefined\n            && nextProps.auth.user.data !== undefined\n            && nextProps.auth.user.data.message !== undefined) {\n            $('#add-user-modal').modal('hide');\n            toast(nextProps.auth.user.data.message, {\n                position: toast.POSITION.TOP_CENTER\n            });\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onUserAdd = e => {\n        e.preventDefault();\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2\n        };\n        this.props.addUser(newUser, this.props.history);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div>\n                <div className=\"modal fade\" id=\"add-user-modal\" data-reset=\"true\">\n                    <div className=\"modal-dialog modal-lg\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h4 className=\"modal-title\">Add User</h4>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <form noValidate onSubmit={this.onUserAdd} id=\"add-user\">\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"name\">Name</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                onChange={this.onChange}\n                                                value={this.state.name}\n                                                id=\"name\"\n                                                type=\"text\"\n                                                error={errors.name}\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.name\n                                                })}/>\n                                            <span className=\"text-danger\">{errors.name}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"email\">Email</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                onChange={this.onChange}\n                                                value={this.state.email}\n                                                error={errors.email}\n                                                id=\"email\"\n                                                type=\"email\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.email\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.email}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"password\">Password</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                autoComplete={''}\n                                                onChange={this.onChange}\n                                                value={this.state.password}\n                                                error={errors.password}\n                                                id=\"password\"\n                                                type=\"password\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.password\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.password}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"password2\">Confirm Password</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                autoComplete={''}\n                                                onChange={this.onChange}\n                                                value={this.state.password2}\n                                                id=\"password2\"\n                                                type=\"password\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.password2\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.password2}</span>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                <button\n                                    form=\"add-user\"\n                                    type=\"submit\"\n                                    className=\"btn btn-primary\">\n                                    Add User\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nUserAddModal.propTypes = {\n    addUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { addUser }\n)(withRouter(UserAddModal));\n","import axios from \"axios\";\nimport {\n    GET_ERRORS,\n    USER_ADD,\n    USER_UPDATE\n} from \"./types\";\n\nexport const addUser = (userData, history) => dispatch => {\n    axios\n        .post(\"/api/user-add\", userData)\n        .then(res => \n            dispatch({\n                type: USER_ADD,\n                payload: res,\n            })\n        ).catch(err =>\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    );\n};\n\n\nexport const updateUser = (userData) => dispatch => {\n    axios\n        .post(\"/api/user-update\", userData)\n        .then(res =>\n            dispatch({\n                type: USER_UPDATE,\n                payload: res,\n            })\n        ).catch(err =>\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    );\n};\n","import React from 'react'\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateUser } from \"../../actions/userActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport $ from 'jquery';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass UserUpdateModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.record.id,\n            name: this.props.record.name,\n            email: this.props.record.email,\n            password: '',\n            errors: {},\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.record) {\n            this.setState({\n                id: nextProps.record.id,\n                name: nextProps.record.name,\n                email: nextProps.record.email,\n            })\n        }\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n        if (nextProps.auth !== undefined\n            && nextProps.auth.user !== undefined\n            && nextProps.auth.user.data !== undefined\n            && nextProps.auth.user.data.message !== undefined\n            && nextProps.auth.user.data.success) {\n            $('#update-user-modal').modal('hide');\n            toast(nextProps.auth.user.data.message, {\n                position: toast.POSITION.TOP_CENTER\n            });\n        }\n    }\n\n    onChange = e => {\n        if (e.target.id === 'user-update-name') {\n            this.setState({ name: e.target.value });\n        }\n        if (e.target.id === 'user-update-email') {\n            this.setState({ email: e.target.value });\n        }\n        if (e.target.id === 'user-update-password') {\n            this.setState({ password: e.target.value });\n        }\n    };\n\n    onUserUpdate = e => {\n        e.preventDefault();\n        const newUser = {\n            _id: this.state.id,\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.updateUser(newUser);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div>\n                <div className=\"modal fade\" id=\"update-user-modal\">\n                    <div className=\"modal-dialog modal-lg\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h4 className=\"modal-title\">Update User</h4>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <form noValidate onSubmit={this.onUserUpdate} id=\"update-user\">\n                                    <input\n                                        onChange={this.onChange}\n                                        value={this.state.id}\n                                        id=\"user-update-id\"\n                                        type=\"text\"\n                                        className=\"d-none\"/>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"name\">Name</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                onChange={this.onChange}\n                                                value={this.state.name}\n                                                id=\"user-update-name\"\n                                                type=\"text\"\n                                                error={errors.name}\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.name\n                                                })}/>\n                                            <span className=\"text-danger\">{errors.name}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"email\">Email</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                onChange={this.onChange}\n                                                value={this.state.email}\n                                                error={errors.email}\n                                                id=\"user-update-email\"\n                                                type=\"email\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.email\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.email}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"password\">Password</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                data-reset-input={true}\n                                                autoComplete={''}\n                                                onChange={this.onChange}\n                                                error={errors.password}\n                                                id=\"user-update-password\"\n                                                type=\"password\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.password\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.password}</span>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                <button\n                                    form=\"update-user\"\n                                    type=\"submit\"\n                                    className=\"btn btn-primary\">\n                                    Update User\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nUserUpdateModal.propTypes = {\n    updateUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { updateUser }\n)(withRouter(UserUpdateModal));\n","import React, { Component, Fragment } from \"react\";\nimport Navbar from \"../partials/Navbar\";\nimport Sidebar from \"../partials/Sidebar\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport UserAddModal from \"../partials/UserAddModal\";\nimport UserUpdateModal from \"../partials/UserUpdateModal\";\nimport { toast, ToastContainer} from \"react-toastify\";\n\nclass Users extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.columns = [\n            {\n                key: \"_id\",\n                text: \"Id\",\n                className: \"id\",\n                align: \"left\",\n                sortable: true,\n            },\n            {\n                key: \"name\",\n                text: \"Name\",\n                className: \"name\",\n                align: \"left\",\n                sortable: true,\n            },\n            {\n                key: \"email\",\n                text: \"Email\",\n                className: \"email\",\n                align: \"left\",\n                sortable: true\n            },\n            {\n                key: \"date\",\n                text: \"Date\",\n                className: \"date\",\n                align: \"left\",\n                sortable: true\n            },\n            {\n                key: \"action\",\n                text: \"Action\",\n                className: \"action\",\n                width: 100,\n                align: \"left\",\n                sortable: false,\n                cell: record => {\n                    return (\n                        <Fragment>\n                            <button\n                                data-toggle=\"modal\"\n                                data-target=\"#update-user-modal\"\n                                className=\"btn btn-primary btn-sm\"\n                                onClick={() => this.editRecord(record)}\n                                style={{marginRight: '5px'}}>\n                                <i className=\"fa fa-edit\"></i>\n                            </button>\n                            <button\n                                className=\"btn btn-danger btn-sm\"\n                                onClick={() => this.deleteRecord(record)}>\n                                <i className=\"fa fa-trash\"></i>\n                            </button>\n                        </Fragment>\n                    );\n                }\n            }\n        ];\n\n        this.config = {\n            page_size: 10,\n            length_menu: [ 10, 20, 50 ],\n            filename: \"Users\",\n            no_data_text: 'No user found!',\n            button: {\n                excel: true,\n                print: true,\n                csv: true\n            },\n            language: {\n                length_menu: \"Show _MENU_ result per page\",\n                filter: \"Filter in records...\",\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\n                pagination: {\n                    first: \"First\",\n                    previous: \"Previous\",\n                    next: \"Next\",\n                    last: \"Last\"\n                }\n            },\n            show_length_menu: true,\n            show_filter: true,\n            show_pagination: true,\n            show_info: true,\n        };\n\n        this.state = {\n            records: []\n        };\n\n        this.state = {\n            currentRecord: {\n                id: '',\n                name: '',\n                email: '',\n                password: '',\n                password2: '',\n            }\n        };\n\n        this.getData = this.getData.bind(this);\n    }\n\n    componentDidMount() {\n        this.getData()\n    };\n\n    componentWillReceiveProps(nextProps) {\n        this.getData()\n    }\n\n    getData() {\n        axios\n            .post(\"/api/user-data\")\n            .then(res => {\n                this.setState({ records: res.data})\n            })\n            .catch()\n    }\n\n    editRecord(record) {\n        this.setState({ currentRecord: record});\n    }\n\n    deleteRecord(record) {\n        axios\n            .post(\"/api/user-delete\", {_id: record._id})\n            .then(res => {\n                if (res.status === 200) {\n                   toast(res.data.message, {\n                       position: toast.POSITION.TOP_CENTER,\n                   })\n                }\n            })\n            .catch();\n        this.getData();\n    }\n\n    pageChange(pageData) {\n        console.log(\"OnPageChange\", pageData);\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <div className=\"d-flex\" id=\"wrapper\">\n                    <Sidebar/>\n                    <UserAddModal/>\n                    <UserUpdateModal record={this.state.currentRecord}/>\n                    <div id=\"page-content-wrapper\">\n                        <div className=\"container-fluid\">\n                            <button className=\"btn btn-link mt-3\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList}/></button>\n                            <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-user-modal\"><FontAwesomeIcon icon={faPlus}/> Add User</button>\n                            <h1 className=\"mt-2 text-primary\">Users List</h1>\n                            <ReactDatatable\n                                config={this.config}\n                                records={this.state.records}\n                                columns={this.columns}\n                                onPageChange={this.pageChange.bind(this)}\n                            />\n                        </div>\n                    </div>\n                    <ToastContainer/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nUsers.propTypes = {\n    auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    records: state.records\n});\n\nexport default connect(\n    mapStateToProps\n)(Users);\n","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateCategory } from \"../../actions/categoryActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from 'axios'\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass CategoryUpdateModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.record.id,\r\n            name: this.props.record.name,\r\n            content: this.props.record.content,\r\n            url: this.props.record.url,\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) { \r\n        if (nextProps.record) {\r\n            this.setState({\r\n                id: nextProps.record.id,\r\n                name: nextProps.record.name,\r\n                content: nextProps.record.content,\r\n                url: nextProps.record.url,\r\n            })\r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        $('#update-category-modal').modal('hide');\r\n        if (nextProps.category !== undefined\r\n            && nextProps.category.category !== undefined\r\n            && nextProps.category.category.data !== undefined\r\n            && nextProps.category.category.data.message !== undefined\r\n            && nextProps.category.category.data.success) {\r\n            $('#update-category-modal').modal('hide');\r\n            toast(nextProps.category.category.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => { \r\n        // alert($(\"#category-update-name\").val()); return;\r\n        if (e.target.id === 'category-update-name') {\r\n            this.setState({ name: e.target.value });\r\n        }\r\n        if (e.target.id === 'category-update-content') {\r\n            this.setState({ content: e.target.value });\r\n        }\r\n        if (e.target.id === 'category-update-url') {\r\n            this.setState({ url: e.target.value });\r\n        }\r\n    };\r\n\r\n    handleUploadFile = (e) => {\r\n    // this.onChange(e)\r\n    const data = new FormData();\r\n    data.append('file', e.target.files[0]);\r\n    // data.append('name', 'some value user types');\r\n    // data.append('description', 'some value user types');\r\n    // '/files' is your nodjs route that triggers our middleware\r\n    axios.post('/api/category-image', data).then((response) => {\r\n      // this.state.url = 'http://localhost:5000/' + response.data.image\r\n      this.setState({ url: response.data.image });\r\n      // console.log(this.state.url); // do something with the response\r\n    })\r\n    }\r\n\r\n    onCategoryUpdate = e => {\r\n        e.preventDefault();\r\n        const newCategory = {\r\n            _id: this.state.id,\r\n            name: this.state.name,\r\n            content: this.state.content,\r\n            url: this.state.url\r\n        };\r\n        // this.props.updateCategory(newCategory)\r\n        // this.props.getData()\r\n        this.props.updateCategory(newCategory, () => {\r\n            this.props.getData()\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"update-category-modal\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Update Category</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onCategoryUpdate} id=\"update-category\">\r\n                                    <input\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.id}\r\n                                        id=\"category-update-id\"\r\n                                        type=\"text\"\r\n                                        className=\"d-none\"/>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Big text</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.name}\r\n                                                id=\"category-update-name\"\r\n                                                type=\"text\"\r\n                                                error={errors.name}\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.name\r\n                                                })}/>\r\n                                            <span className=\"text-danger\">{errors.name}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"content\">Small text</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.content}\r\n                                                error={errors.content}\r\n                                                id=\"category-update-content\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.content\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.content}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"url\">Image</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.handleUploadFile}\r\n                                                error={errors.url}\r\n                                                id=\"url\"\r\n                                                type=\"file\"\r\n                                                accept=\"image/*\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.url\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.url}</span>\r\n                                        </div>\r\n                                        <div className=\"col-md-3\">\r\n                                            <img\r\n                                                src={this.state.url}\r\n                                                id=\"img\"\r\n                                                className=\"img-responsive\"\r\n                                                width= '80px'\r\n                                                height='80px'\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"update-category\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Update Category\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCategoryUpdateModal.propTypes = {\r\n    updateCategory: PropTypes.func.isRequired,\r\n    category: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    category: state.category,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { updateCategory }\r\n)(withRouter(CategoryUpdateModal));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport CategoryAddModal from \"../partials/CategoryAddModal\";\r\nimport CategoryUpdateModal from \"../partials/CategoryUpdateModal\";\r\nimport { toast, ToastContainer} from \"react-toastify\";\r\n\r\nclass Categories extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            // {\r\n            //     key: \"_id\",\r\n            //     text: \"No\",\r\n            //     className: \"id\",\r\n            //     align: \"left\",\r\n            //     sortable: true,\r\n            //     width: 50\r\n            // },\r\n            {\r\n                key: \"name\",\r\n                text: \"Big text\",\r\n                className: \"name\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"content\",\r\n                text: \"Small text\",\r\n                className: \"content\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"url\",\r\n                text: \"Image\",\r\n                className: \"url\",\r\n                align: \"center\",\r\n                sortable: true,\r\n                cell: record => {\r\n                    return (\r\n                        <Fragment>\r\n                            <img\r\n                                className='img-responsive'\r\n                                src={record['url']} \r\n                                alt='Not found image' \r\n                                width='100px'\r\n                                height='100px' />\r\n                        </Fragment>\r\n                        )\r\n                }\r\n            },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                className: \"action\",\r\n                width: 100,\r\n                align: \"left\",\r\n                sortable: true,\r\n                cell: record => {\r\n                    return (\r\n                        <Fragment>\r\n                            <button\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#update-category-modal\"\r\n                                className=\"btn btn-primary btn-sm\"\r\n                                onClick={() => this.editRecord(record)}\r\n                                style={{marginRight: '5px'}}>\r\n                                <i className=\"fa fa-edit\"></i>\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger btn-sm\"\r\n                                onClick={() => this.deleteRecord(record)}>\r\n                                <i className=\"fa fa-trash\"></i>\r\n                            </button>\r\n                        </Fragment>\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            page_size: 10,\r\n            length_menu: [ 5, 25, 50 ],\r\n            filename: \"Categories\",\r\n            no_data_text: 'No category found!',\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            },\r\n            language: {\r\n                length_menu: \"Show _MENU_ result per page\",\r\n                filter: \"Filter in records...\",\r\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\r\n                pagination: {\r\n                    first: \"First\",\r\n                    previous: \"Previous\",\r\n                    next: \"Next\",\r\n                    last: \"Last\"\r\n                }\r\n            },\r\n            show_length_menu: true,\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            show_info: true,\r\n        };\r\n        this.state = {\r\n            currentRecord: {\r\n                id: '',\r\n                name: '',\r\n                content: '',\r\n                url: '',\r\n            },\r\n            records: []\r\n        };\r\n\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    };\r\n    // componentDidUpdate() {\r\n    //     this.getData()\r\n    // };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        axios\r\n            .post(\"/api/category-data\")\r\n            .then(res => {\r\n                this.setState({ records: res.data})\r\n            })\r\n            .catch()\r\n    }\r\n\r\n    editRecord(record) {\r\n        this.setState({ currentRecord: record});\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        axios\r\n            .post(\"/api/category-delete\", {_id: record._id, name: record.name})\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                   toast(res.data.message, {\r\n                       position: toast.POSITION.TOP_CENTER,\r\n                   })\r\n                }\r\n            })\r\n            .catch();\r\n        this.getData();\r\n    }\r\n\r\n    pageChange(pageData) {\r\n        console.log(\"OnPageChange\", pageData);\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <CategoryAddModal getData={this.getData.bind(this)} />\r\n                    <CategoryUpdateModal record={this.state.currentRecord} getData={this.getData.bind(this)} />\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <br />\r\n                            <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-category-modal\"><FontAwesomeIcon icon={faPlus}/> Add Category</button>\r\n                            <h1 className=\"mt-2 text-primary\">Categories List</h1>\r\n                            <ReactDatatable\r\n                                config={this.config}\r\n                                records={this.state.records}\r\n                                columns={this.columns}\r\n                                onPageChange={this.pageChange.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <ToastContainer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCategories.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    records: state.records\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Categories);\r\n","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItem } from \"../../actions/itemActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from 'axios'\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass ItemAddModal extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            category_id: '',\r\n            content: \"\",\r\n            url: \"\",\r\n            sound: '',\r\n            errors: {},\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.category_id) {\r\n            this.setState({\r\n                category_id: nextProps.category_id,\r\n            })\r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        $('#add-item-modal').modal('hide');\r\n        if (nextProps.item !== undefined\r\n            && nextProps.item.item !== undefined\r\n            && nextProps.item.item.data !== undefined\r\n            && nextProps.item.item.data.message !== undefined) {\r\n            $('#add-item-modal').modal('hide');\r\n            toast(nextProps.item.item.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    handleUploadImage = (e) => {\r\n    this.onChange(e)\r\n    const data = new FormData();\r\n    data.append('file', e.target.files[0]);\r\n    axios.post('/api/item-image', data).then((response) => {\r\n      this.setState({ url: response.data.image });\r\n    })\r\n    }\r\n\r\n    handleUploadSound = (e) => {\r\n    // this.onChange(e)\r\n    const data = new FormData();\r\n    data.append('file', e.target.files[0]);\r\n    axios.post('/api/item-sound', data).then((response) => { \r\n      this.setState({ sound: response.data.sound });\r\n    })\r\n    }\r\n\r\n    onItemAdd = e => {\r\n        e.preventDefault();\r\n        const newItem = {\r\n            category_id: this.state.category_id,\r\n            name: this.state.name,\r\n            content: this.state.content,\r\n            url: this.state.url,\r\n            sound: this.state.sound,\r\n        };\r\n        let cb = this.props.addItem(newItem, this.props.history, () => {\r\n            this.props.getData()\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"add-item-modal\" data-reset=\"true\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Add Item</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onItemAdd} id=\"add-item\">\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Big text</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.name}\r\n                                                id=\"name\"\r\n                                                type=\"text\"\r\n                                                error={errors.name}\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.name\r\n                                                })}/>\r\n                                            <span className=\"text-danger\">{errors.name}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"content\">Small text</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.content}\r\n                                                error={errors.content}\r\n                                                id=\"content\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.content\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.content}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"url\">Image</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.handleUploadImage}\r\n                                                error={errors.url}\r\n                                                id=\"url\"\r\n                                                type=\"file\"\r\n                                                accept=\"image/*\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.url\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.url}</span>\r\n                                        </div>\r\n                                        <div className=\"col-md-3\">\r\n                                            <img\r\n                                                src={this.state.url}\r\n                                                id=\"img\"\r\n                                                className=\"img-responsive\"\r\n                                                width= '80px'\r\n                                                height='80px'\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"sound\">Sound</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.handleUploadSound}\r\n                                                error={errors.sound}\r\n                                                id=\"sound\"\r\n                                                type=\"file\"\r\n                                                accept=\"audio/*\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.sound\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.sound}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"add-item\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Add Item\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nItemAddModal.propTypes = {\r\n    addItem: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    item: state.item,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addItem }\r\n)(withRouter(ItemAddModal));\r\n","import axios from \"axios\";\r\nimport {\r\n    GET_ERRORS,\r\n    ITEM_ADD,\r\n    ITEM_UPDATE\r\n} from \"./types\";\r\n\r\nexport const addItem = (ItemData, history, callback) => dispatch => {\r\n    axios\r\n        .post(\"/api/Item-add\", ItemData)\r\n        .then(res =>{\r\n                    if (callback) callback(res)\r\n                    dispatch({\r\n                        type: ITEM_ADD,\r\n                        payload: res,\r\n                    })\r\n                }).catch(err =>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    );\r\n};\r\n\r\n\r\nexport const updateItem = (ItemData, callback) => dispatch => {\r\n    axios\r\n        .post(\"/api/Item-update\", ItemData)\r\n        .then(res =>{\r\n                    if (callback) callback(res)\r\n                    dispatch({\r\n                        type: ITEM_UPDATE,\r\n                        payload: res,\r\n                    })}\r\n        ).catch(err =>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    );\r\n};\r\n","import React from 'react'\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateItem } from \"../../actions/itemActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport $ from 'jquery';\r\nimport axios from 'axios'\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass ItemUpdateModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.record.id,\r\n            name: this.props.record.name,\r\n            category_id: this.props.record.category_id,\r\n            content: this.props.record.content,\r\n            url: this.props.record.url,\r\n            sound: this.props.record.sound,\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.record) {\r\n            this.setState({\r\n                id: nextProps.record.id,\r\n                name: nextProps.record.name,\r\n                category_id: nextProps.record.category_id,\r\n                content: nextProps.record.content,\r\n                url: nextProps.record.url,\r\n                sound: nextProps.record.sound,\r\n            })\r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        $('#update-item-modal').modal('hide');\r\n        if (nextProps.item !== undefined\r\n            && nextProps.item.item !== undefined\r\n            && nextProps.item.item.data !== undefined\r\n            && nextProps.item.item.data.message !== undefined\r\n            && nextProps.item.item.data.success) {\r\n            $('#update-item-modal').modal('hide');\r\n            toast(nextProps.item.item.data.message, {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        if (e.target.id === 'item-update-name') {\r\n            this.setState({ name: e.target.value });\r\n        }\r\n        if (e.target.id === 'item-update-category') {\r\n            this.setState({ category_id: e.target.value });\r\n        }\r\n        if (e.target.id === 'item-update-content') {\r\n            this.setState({ content: e.target.value });\r\n        }\r\n        if (e.target.id === 'item-update-url') {\r\n            this.setState({ url: e.target.value });\r\n        }\r\n        if (e.target.id === 'item-update-sound') {\r\n            this.setState({ sound: e.target.value });\r\n        }\r\n    };\r\n\r\n    handleUploadImage = (e) => {\r\n    // this.onChange(e)\r\n    const data = new FormData();\r\n    data.append('file', e.target.files[0]);\r\n    axios.post('/api/item-image', data).then((response) => {\r\n      this.setState({ url: response.data.image });\r\n    })\r\n    }\r\n\r\n    handleUploadSound = (e) => {\r\n    this.onChange(e)\r\n    const data = new FormData();\r\n    data.append('file', e.target.files[0]);\r\n    axios.post('/api/item-sound', data).then((response) => { \r\n      this.setState({ sound: response.data.sound });\r\n    })\r\n    }\r\n\r\n    onItemUpdate = e => {\r\n        e.preventDefault();\r\n        const newItem = {\r\n            _id: this.state.id,\r\n            category_id: this.state.category_id,\r\n            name: this.state.name,\r\n            content: this.state.content,\r\n            url: this.state.url,\r\n            sound: this.state.sound,\r\n        };\r\n        this.props.updateItem(newItem, () => {\r\n            this.props.getData() })\r\n        }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"update-item-modal\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Update Item</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form noValidate onSubmit={this.onItemUpdate} id=\"update-item\">\r\n                                    <input\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.id}\r\n                                        id=\"item-update-id\"\r\n                                        type=\"text\"\r\n                                        className=\"d-none\"/>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"name\">Big text</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.name}\r\n                                                id=\"item-update-name\"\r\n                                                type=\"text\"\r\n                                                error={errors.name}\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.name\r\n                                                })}/>\r\n                                            <span className=\"text-danger\">{errors.name}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"content\">Small text</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.content}\r\n                                                error={errors.content}\r\n                                                id=\"item-update-content\"\r\n                                                type=\"text\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.content\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.content}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"url\">Image</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.handleUploadImage}\r\n                                                error={errors.url}\r\n                                                id=\"url\"\r\n                                                type=\"file\"\r\n                                                accept=\"image/*\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.url\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.url}</span>\r\n                                        </div>\r\n                                        <div className=\"col-md-3\">\r\n                                            <img\r\n                                                src={this.state.url}\r\n                                                id=\"img\"\r\n                                                className=\"img-responsive\"\r\n                                                width= '80px'\r\n                                                height='80px'\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <div className=\"col-md-3\">\r\n                                            <label htmlFor=\"sound\">Sound</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <input\r\n                                                autoComplete={''}\r\n                                                onChange={this.handleUploadSound}\r\n                                                error={errors.sound}\r\n                                                id=\"sound\"\r\n                                                type=\"file\"\r\n                                                accept=\"audio/*\"\r\n                                                className={classnames(\"form-control\", {\r\n                                                    invalid: errors.sound\r\n                                                })}\r\n                                            />\r\n                                            <span className=\"text-danger\">{errors.sound}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button\r\n                                    form=\"update-item\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\">\r\n                                    Update Item\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nItemUpdateModal.propTypes = {\r\n    updateItem: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    item: state.item,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { updateItem }\r\n)(withRouter(ItemUpdateModal));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Navbar from \"../partials/Navbar\";\r\nimport Sidebar from \"../partials/Sidebar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ItemAddModal from \"../partials/ItemAddModal\";\r\nimport ItemUpdateModal from \"../partials/ItemUpdateModal\";\r\nimport { toast, ToastContainer} from \"react-toastify\";\r\n\r\nclass Items extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // console.log(\"this.props\", this.props.match.params.category_id)\r\n        this.columns = [\r\n            // {\r\n            //     key: \"_id\",\r\n            //     text: \"No\",\r\n            //     className: \"id\",\r\n            //     align: \"left\",\r\n            //     sortable: true,\r\n            //     width: 20\r\n            // },\r\n            // {\r\n            //     key: \"category_id.name\",\r\n            //     text: \"Category\",\r\n            //     className: \"category\",\r\n            //     align: \"left\",\r\n            //     sortable: true\r\n            // },\r\n            {\r\n                key: \"name\",\r\n                text: \"Big text\",\r\n                className: \"name\",\r\n                align: \"left\",\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"content\",\r\n                text: \"Small text\",\r\n                className: \"content\",\r\n                align: \"left\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"url\",\r\n                text: \"Image\",\r\n                className: \"url\",\r\n                align: \"center\",\r\n                sortable: true,\r\n                cell: record => {\r\n                    return (\r\n                        <Fragment>\r\n                            <img\r\n                                className='img-responsive'\r\n                                src={record['url']} \r\n                                alt='Not found image' \r\n                                width='100px'\r\n                                height='100px' />\r\n                        </Fragment>\r\n                        )\r\n                }\r\n            },\r\n            {\r\n                key: \"sound\",\r\n                text: \"Sound\",\r\n                className: \"sound\",\r\n                align: \"left\",\r\n                sortable: true,\r\n                cell: record => {\r\n                    let a = record['sound'].split('-')[2]\r\n\r\n                    return (\r\n                        <Fragment>\r\n                            <a href={record['sound']}>{a}</a>\r\n                        </Fragment>\r\n                        )\r\n                }\r\n            },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                className: \"action\",\r\n                width: 100,\r\n                align: \"left\",\r\n                sortable: true,\r\n                cell: record => {\r\n                    return (\r\n                        <Fragment>\r\n                            <button\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#update-item-modal\"\r\n                                className=\"btn btn-primary btn-sm\"\r\n                                onClick={() => this.editRecord(record)}\r\n                                style={{marginRight: '5px'}}>\r\n                                <i className=\"fa fa-edit\"></i>\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger btn-sm\"\r\n                                onClick={() => this.deleteRecord(record)}>\r\n                                <i className=\"fa fa-trash\"></i>\r\n                            </button>\r\n                        </Fragment>\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            page_size: 10,\r\n            length_menu: [  5, 25, 50 ],\r\n            filename: \"Items\",\r\n            no_data_text: 'No item found!',\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            },\r\n            language: {\r\n                length_menu: \"Show _MENU_ result per page\",\r\n                filter: \"Filter in records...\",\r\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\r\n                pagination: {\r\n                    first: \"First\",\r\n                    previous: \"Previous\",\r\n                    next: \"Next\",\r\n                    last: \"Last\"\r\n                }\r\n            },\r\n            show_length_menu: true,\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            show_info: true,\r\n        };\r\n\r\n        this.state = {\r\n            currentRecord: {\r\n                id: '',\r\n                category_id: '',\r\n                name: '',\r\n                content: '',\r\n                url: '',\r\n                sound: '',\r\n            },\r\n            records: [],\r\n            category_id:'',\r\n            dummy_index: 0\r\n        };\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        this.setState({ category_id: this.props.match.params.category_id})\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.getData()\r\n    };\r\n    // componentDidUpdate() {\r\n    //     this.getData()\r\n    // };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.getData()\r\n    }\r\n\r\n    getData() { \r\n        axios\r\n            .post(\"/api/item-data\", {category_id: this.state.category_id})\r\n            .then(res => { console.log(res.data)\r\n                this.setState({ records: res.data})\r\n            })\r\n            .catch()\r\n    }\r\n\r\n    editRecord(record) {\r\n        this.setState({ currentRecord: record});\r\n    }\r\n\r\n    addRecord(d_index) { //addRecord() and dummy_index are only needed to trigger the function, componentWillReceiveProps(nextProps) in ItemAddModal.js \r\n                         //as this function is only trigger when calling with the change of state in the parent component.\r\n        this.setState({ dummy_index: d_index+1});\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        axios\r\n            .post(\"/api/item-delete\", {_id: record._id, category_id: this.state.category_id, name: record.name })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                   toast(res.data.message, {\r\n                       position: toast.POSITION.TOP_CENTER,\r\n                   })\r\n                }\r\n            })\r\n            .catch();\r\n        this.getData();\r\n    }\r\n\r\n    pageChange(pageData) {\r\n        console.log(\"OnPageChange\", pageData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <div className=\"d-flex\" id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <ItemAddModal category_id={this.state.category_id} dummy_index={this.state.dummy_index} getData={this.getData.bind(this)} />\r\n                    <ItemUpdateModal record={this.state.currentRecord} getData={this.getData.bind(this)} />\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            <br />\r\n                            <button onClick={() => this.addRecord(this.state.dummy_index)} className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-item-modal\"><FontAwesomeIcon icon={faPlus}/> Add Item</button>\r\n                            <h1 className=\"mt-2 text-primary\">Items List</h1>\r\n                            <ReactDatatable\r\n                                config={this.config}\r\n                                records={this.state.records}\r\n                                columns={this.columns}\r\n                                onPageChange={this.pageChange.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <ToastContainer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nItems.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    records: state.records\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Items);\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./components/pages/Dashboard\";\nimport React, { Component } from 'react';\nimport Login from \"./components/auth/Login\";\nimport NotFound from \"./components/layout/NotFound\";\nimport { Provider } from \"react-redux\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Register from \"./components/auth/Register\";\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap';\nimport '../node_modules/font-awesome/css/font-awesome.css';\nimport '../node_modules/jquery/dist/jquery.min';\nimport '../node_modules/popper.js/dist/popper';\n\nimport User from \"./components/pages/Users\";\nimport Category from \"./components/pages/Categories\";\nimport Item from \"./components/pages/Items\";\n\nif (localStorage.jwtToken) {\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    store.dispatch(setCurrentUser(decoded));\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        store.dispatch(logoutUser());\n        window.location.href = \"./login\";\n    }\n}\n\nclass App extends Component {\n    render () {\n        return (\n            <Provider store={store}>\n                <Router>\n                    <div className=\"App\">\n                        <Switch>\n                            <Route exact path=\"/\" component={Login} />\n                            <Route exact path=\"/register\" component={Register} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Switch>\n                                <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                                <PrivateRoute exact path=\"/users\" component={User} />\n                                <PrivateRoute exact path=\"/categories\" component={Category} />\n                                <PrivateRoute exact path=\"/items/:category_id\" component={Item} />\n                            </Switch>\n                            <Route exact path=\"*\" component={NotFound} />\n                        </Switch>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport $ from \"jquery\";\nwindow.jQuery = $;\nwindow.$ = $;\nglobal.jQuery = $;\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n$(\"#menu-toggle\").click(function() {\n    $(\"#wrapper\").toggleClass(\"toggled\");\n});\n\n$('.modal[data-reset=\"true\"]').on('shown.bs.modal', () =>\n    $(\"input[name != 'timestamp']\").val(''));\n\n$('.modal').on('shown.bs.modal', () =>\n    $('input[data-reset-input=\"true\"]').val(''));\n"],"sourceRoot":""}